name: Deploy to Server

on:
  push:
    branches:
      - main  # Yalnızca main dalına push yapıldığında çalışır

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Repository'yi clone'la
      - name: Check out the code
        uses: actions/checkout@v2

      # Docker hizmetlerini başlat ve gerekli ortam değişkenlerini ayarla
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # PHP ve Composer kur
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Laravel projenizin PHP sürümüne göre bunu ayarlayın
          tools: composer

      # Composer ile bağımlılıkları yükle
      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      #ENV yi oluştur.
      - name: Copy .env file
        run: cp .env.ci .env
        
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'laravel' # Optional, default value is "test". The specified database which will be create
          mysql root password: 'password' # Required if "mysql user" is empty, default is empty. The root superuser password
      
      # Composer ile bağımlılıkları yükle
      - name: Wait for MySQL
        run: sleep 15
        
      - name: Migrate DB
        run: php artisan migrate --seed
      # Testleri çalıştır
      - name: Run tests
        run: ./vendor/bin/pest

      # Eğer testler başarılıysa, deploy işlemini başlat
      - name: Deploy to Server
        if: success() # Sadece testler başarılıysa çalışır
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > private_key
          chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key -p "$SSH_PORT" "$SSH_USERNAME@$SSH_HOST" << 'EOF'
            cd /var/www/location-app
            git pull origin main
          EOF
          rm private_key # SSH anahtarını sil
